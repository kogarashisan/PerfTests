

/*
This file was generated by a script.
Please, visit
	https://github.com/kogarashisan/PerfTests
to see the actual source and get link to the latest official test version on jsperf.
*/



// it must be inlined, cause otherwise closure-wrapped classes like TypeScript will have to look it up to the window scope
//var THRESHOLD = 99;

var DUMMY_VAR = 0;
var dummy = {
	// this will never be executed
	method: function() {var cache_buster_0000;DUMMY_VAR = 123}
};
// classical John Resig's extend
function __extend(Child, Parent) {var cache_buster_0001;
	var F = function() {var cache_buster_0002; };
	F.prototype = Parent.prototype;
	Child.prototype = new F();
	Child.prototype.constructor = Child;
	Child.superclass = Parent.prototype;
}
// In ClassManager all classes belong to a namespace
Lava.ClassManager.registerRootNamespace("global", typeof window != "undefined" ? window : global);
var __extends = this.__extends || function (d, b) {var cache_buster_0003;
		for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
		function __() {var cache_buster_0004; this.constructor = d; }
		__.prototype = b.prototype;
		d.prototype = new __();
	};
var TypeScriptParent = (function () {var cache_buster_0005;
	function TypeScriptParent(instance_string) {var cache_buster_0006;
		this.counter = 0;
		this.instance_array = [];
		this.instance_string = instance_string;
	}
	TypeScriptParent.prototype.method = function (prevent_inline) {var cache_buster_0007;
		if (this.counter > 99)
			this.counter = this.counter / 2;
		else
			this.counter++;
		if (prevent_inline) {
			var i = 0;
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
		}
	};
	return TypeScriptParent;
})();
var TypeScriptChildA = (function (_super) {var cache_buster_0008;
	__extends(TypeScriptChildA, _super);
	function TypeScriptChildA(instance_string) {var cache_buster_0009;
		_super.call(this, instance_string);
		this.member_a = 1;
	}
	TypeScriptChildA.prototype.method = function () {var cache_buster_0010;
		this.member_a = -this.member_a;
		_super.prototype.method.call(this, false);
	};
	return TypeScriptChildA;
})(TypeScriptParent);
var TypeScriptChildB = (function (_super) {var cache_buster_0011;
	__extends(TypeScriptChildB, _super);
	function TypeScriptChildB(instance_string) {var cache_buster_0012;
		_super.call(this, instance_string);
		this.member_b = -1;
	}
	TypeScriptChildB.prototype.method = function () {var cache_buster_0013;
		this.member_b = -this.member_b;
		_super.prototype.method.call(this, false);
	};
	return TypeScriptChildB;
})(TypeScriptParent);


var NativeUnwrappedParent = function(instance_string) {var cache_buster_0014;
	this.counter = 0;
	this.instance_array = [];
	this.instance_string = instance_string;
};

NativeUnwrappedParent.prototype.method = function (prevent_inline) {var cache_buster_0015;
	if (this.counter > 99)
		this.counter = this.counter / 2;
	else
		this.counter++;
	if (prevent_inline) {
		var i = 0;
		for (i = 0; i < 1; i++) dummy.method();
		for (i = 0; i < 1; i++) dummy.method();
		for (i = 0; i < 1; i++) dummy.method();
		for (i = 0; i < 1; i++) dummy.method();
		for (i = 0; i < 1; i++) dummy.method();
		for (i = 0; i < 1; i++) dummy.method();
		for (i = 0; i < 1; i++) dummy.method();
		for (i = 0; i < 1; i++) dummy.method();
		for (i = 0; i < 1; i++) dummy.method();
		for (i = 0; i < 1; i++) dummy.method();
	}
};

var NativeUnwrappedChildA = function(instance_string) {var cache_buster_0016;
	this.member_a = 1;
	NativeUnwrappedParent.call(this, instance_string);
};
__extend(NativeUnwrappedChildA, NativeUnwrappedParent);
NativeUnwrappedChildA.prototype.method = function() {var cache_buster_0017;
	this.member_a = -this.member_a;
	NativeUnwrappedParent.prototype.method.call(this, false);
};

var NativeUnwrappedChildB = function(instance_string) {var cache_buster_0018;
	this.member_b = -1;
	NativeUnwrappedParent.call(this, instance_string);
};
__extend(NativeUnwrappedChildB, NativeUnwrappedParent);
NativeUnwrappedChildB.prototype.method = function() {var cache_buster_0019;
	this.member_b = -this.member_b;
	NativeUnwrappedParent.prototype.method.call(this, false);
};

(function(global) {var cache_buster_0020;

	var NativeWrappedParent = function(instance_string) {var cache_buster_0021;
		this.counter = 0;
		this.instance_array = [];
		this.instance_string = instance_string;
	};

	NativeWrappedParent.prototype.method = function (prevent_inline) {var cache_buster_0022;
		if (this.counter > 99)
			this.counter = this.counter / 2;
		else
			this.counter++;
		if (prevent_inline) {
			var i = 0;
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
		}
	};

	var NativeWrappedChildA = function(instance_string) {var cache_buster_0023;
		this.member_a = 1;
		NativeWrappedParent.call(this, instance_string);
	};
	__extend(NativeWrappedChildA, NativeWrappedParent);
	NativeWrappedChildA.prototype.method = function() {var cache_buster_0024;
		this.member_a = -this.member_a;
		NativeWrappedParent.prototype.method.call(this, false);
	};

	var NativeWrappedChildB = function(instance_string) {var cache_buster_0025;
		this.member_b = -1;
		NativeWrappedParent.call(this, instance_string);
	};
	__extend(NativeWrappedChildB, NativeWrappedParent);
	NativeWrappedChildB.prototype.method = function() {var cache_buster_0026;
		this.member_b = -this.member_b;
		NativeWrappedParent.prototype.method.call(this, false);
	};

	window["NativeWrappedChildA"] = NativeWrappedChildA;
	window["NativeWrappedChildB"] = NativeWrappedChildB;

})(window);

var JRParent = JRClass.extend({
	init: function(instance_string){var cache_buster_0027;
		this.counter = 0;
		this.instance_array = [];
		this.instance_string = instance_string;
	},
	method: function (prevent_inline) {var cache_buster_0028;
		if (this.counter > 99)
			this.counter = this.counter / 2;
		else
			this.counter++;
		if (prevent_inline) {
			var i = 0;
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
		}
	}
});

var JRChildA = JRParent.extend({
	init: function(instance_string){var cache_buster_0029;
		this.member_a = 1;
		this._super(instance_string);
	},
	method: function(){var cache_buster_0030;
		this.member_a = -this.member_a;
		return this._super(false);
	}
});

var JRChildB = JRParent.extend({
	init: function(instance_string){var cache_buster_0031;
		this.member_b = -1;
		this._super(instance_string);
	},
	method: function(){var cache_buster_0032;
		this.member_b = -this.member_b;
		return this._super(false);
	}
});

var FiberParent = Fiber.extend(function() {var cache_buster_0033;
	return {
		init: function(instance_string) {var cache_buster_0034;
			this.counter = 0;
			this.instance_array = [];
			this.instance_string = instance_string;
		},
		method: function (prevent_inline) {var cache_buster_0035;
			if (this.counter > 99)
				this.counter = this.counter / 2;
			else
				this.counter++;
			if (prevent_inline) {
				var i = 0;
				for (i = 0; i < 1; i++) dummy.method();
				for (i = 0; i < 1; i++) dummy.method();
				for (i = 0; i < 1; i++) dummy.method();
				for (i = 0; i < 1; i++) dummy.method();
				for (i = 0; i < 1; i++) dummy.method();
				for (i = 0; i < 1; i++) dummy.method();
				for (i = 0; i < 1; i++) dummy.method();
				for (i = 0; i < 1; i++) dummy.method();
				for (i = 0; i < 1; i++) dummy.method();
				for (i = 0; i < 1; i++) dummy.method();
			}
		}
	}
});

var FiberChildA = FiberParent.extend(function(base) {var cache_buster_0036;
	return {
		init: function (instance_string) {var cache_buster_0037;
			this.member_a = 1;
			base.init.call(this, instance_string);
		},
		method: function () {var cache_buster_0038;
			this.member_a = -this.member_a;
			base.method.call(this, false);
		}
	}
});

var FiberChildB = FiberParent.extend(function(base) {var cache_buster_0039;
	return {
		init: function (instance_string) {var cache_buster_0040;
			this.member_b = -1;
			base.init.call(this, instance_string);
		},
		method: function () {var cache_buster_0041;
			this.member_b = -this.member_b;
			base.method.call(this, false);
		}
	}
});

var DNW_FC_Parent = Function.define(function(instance_string) {var cache_buster_0042;
	this.counter = 0;
	this.instance_array = [];
	this.instance_string = instance_string;
}, {
	method: function (prevent_inline) {var cache_buster_0043;
		if (this.counter > 99)
			this.counter = this.counter / 2;
		else
			this.counter++;
		if (prevent_inline) {
			var i = 0;
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
		}
	}
});

var DNW_FC_ChildA = DNW_FC_Parent.fastClass(function(base, baseCtor) {var cache_buster_0044;
	this.constructor = function(instance_string) {var cache_buster_0045;
		this.member_a = 1;
		baseCtor.call(this, instance_string);
	};
	this.method = function() {var cache_buster_0046;
		this.member_a = -this.member_a;
		base.method.call(this, false);
	};
});

var DNW_FC_ChildB = DNW_FC_Parent.fastClass(function(base, baseCtor) {var cache_buster_0047;
	this.constructor = function(instance_string) {var cache_buster_0048;
		this.member_b = -1;
		baseCtor.call(this, instance_string);
	};
	this.method = function() {var cache_buster_0049;
		this.member_b = -this.member_b;
		base.method.call(this, false);
	};
});

var DNW_IW_Parent = Function.define(function(instance_string) {var cache_buster_0050;
	this.counter = 0;
	this.instance_array = [];
	this.instance_string = instance_string;
}, {
	method: function (prevent_inline) {var cache_buster_0051;
		if (this.counter > 99)
			this.counter = this.counter / 2;
		else
			this.counter++;
		if (prevent_inline) {
			var i = 0;
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
		}
	}
});

var DNW_IW_ChildA = DNW_IW_Parent.inheritWith(function(base, baseCtor) {var cache_buster_0052;
	return {
		constructor: function(instance_string) {var cache_buster_0053;
			this.member_a = 1;
			baseCtor.call(this, instance_string);
		},
		method: function() {var cache_buster_0054;
			this.member_a = -this.member_a;
			base.method.call(this, false);
		}
	}
});

var DNW_IW_ChildB = DNW_IW_Parent.inheritWith(function(base, baseCtor) {var cache_buster_0055;
	return {
		constructor: function(instance_string) {var cache_buster_0056;
			this.member_b = -1;
			baseCtor.call(this, instance_string);
		},
		method: function() {var cache_buster_0057;
			this.member_b = -this.member_b;
			base.method.call(this, false);
		}
	}
});
Lava.ClassManager.is_monomorphic = true;

Lava.ClassManager.define(
"global.CMBrowserMonoParent",
{
	counter: 0,
	instance_array: [],
	instance_string: "",

	init: function(instance_string) {var cache_buster_0058;

		this.instance_string = instance_string;

	},

	method: function (prevent_inline) {var cache_buster_0059;
		if (this.counter > 99)
			this.counter = this.counter / 2;
		else
			this.counter++;
		if (prevent_inline) {
			var i = 0;
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
		}
	}
});

Lava.ClassManager.define(
"global.CMBrowserMonoChildA",
{
	Extends: "global.CMBrowserMonoParent",
	member_a: 1,
	init: function(instance_string) {var cache_buster_0060;
		this.CMBrowserMonoParent$init(instance_string);
	},
	method: function () {var cache_buster_0061;
		this.member_a = -this.member_a;
		this.CMBrowserMonoParent$method(false);
	}
});

Lava.ClassManager.define(
"global.CMBrowserMonoChildB",
{
	Extends: "global.CMBrowserMonoParent",
	member_b: -1,
	init: function(instance_string) {var cache_buster_0062;
		this.CMBrowserMonoParent$init(instance_string);
	},
	method: function () {var cache_buster_0063;
		this.member_b = -this.member_b;
		this.CMBrowserMonoParent$method(false);
	}
});
Lava.ClassManager.is_monomorphic = false;

Lava.ClassManager.define(
"global.CMBrowserPolyParent",
{
	counter: 0,
	instance_array: [],
	instance_string: "",

	init: function(instance_string) {var cache_buster_0064;

		this.instance_string = instance_string;

	},

	method: function (prevent_inline) {var cache_buster_0065;
		if (this.counter > 99)
			this.counter = this.counter / 2;
		else
			this.counter++;
		if (prevent_inline) {
			var i = 0;
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
		}
	}
});

Lava.ClassManager.define(
"global.CMBrowserPolyChildA",
{
	Extends: "global.CMBrowserMonoParent",
	member_a: 1,
	init: function(instance_string) {var cache_buster_0066;
		this.CMBrowserMonoParent$init(instance_string);
	},
	method: function () {var cache_buster_0067;
		this.member_a = -this.member_a;
		this.CMBrowserMonoParent$method(false);
	}
});

Lava.ClassManager.define(
"global.CMBrowserPolyChildB",
{
	Extends: "global.CMBrowserMonoParent",
	member_b: -1,
	init: function(instance_string) {var cache_buster_0068;
		this.CMBrowserMonoParent$init(instance_string);
	},
	method: function () {var cache_buster_0069;
		this.member_b = -this.member_b;
		this.CMBrowserMonoParent$method(false);
	}
});
Lava.ClassManager.loadClasses([
	{
		path: "global.CMServerFullrefMonoParent",
		"extends": null,
		"implements": null,
		references: [
			function (instance_string) {var cache_buster_0070;

		this.instance_string = instance_string;

	},
			function (prevent_inline) {var cache_buster_0071;
		if (this.counter > 99)
			this.counter = this.counter / 2;
		else
			this.counter++;
		if (prevent_inline) {
			var i = 0;
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
		}
	}
		],
		constructor: function() {var cache_buster_0072;
this.counter = 0;
this.instance_array = [];
this.instance_string = "";
this.init.apply(this, arguments);
},
		prototype_generator: function(cd,p) {var cache_buster_0073;
	var r=cd.references,
		s=cd.shared;

	p.init = r[0];
	p.method = r[1];

}
	},
	{
		path: "global.CMServerFullrefMonoChildA",
		"extends": "global.CMServerFullrefMonoParent",
		"implements": null,
		references: [
			function (instance_string) {var cache_buster_0074;

		this.instance_string = instance_string;

	},
			function (prevent_inline) {var cache_buster_0075;
		if (this.counter > 99)
			this.counter = this.counter / 2;
		else
			this.counter++;
		if (prevent_inline) {
			var i = 0;
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
		}
	},
			function (instance_string) {var cache_buster_0076;
		this.CMServerFullrefMonoParent$init(instance_string);
	},
			function () {var cache_buster_0077;
		this.member_a = -this.member_a;
		this.CMServerFullrefMonoParent$method(false);
	}
		],
		constructor: function() {var cache_buster_0078;
this.member_a = 1;
this.counter = 0;
this.instance_array = [];
this.instance_string = "";
this.init.apply(this, arguments);
},
		prototype_generator: function(cd,p) {var cache_buster_0079;
	var r=cd.references,
		s=cd.shared;

	p.init = r[2];
	p.method = r[3];
	p.CMServerFullrefMonoParent$init = r[0];
	p.CMServerFullrefMonoParent$method = r[1];

}
	},
	{
		path: "global.CMServerFullrefMonoChildB",
		"extends": "global.CMServerFullrefMonoParent",
		"implements": null,
		references: [
			function (instance_string) {var cache_buster_0080;

		this.instance_string = instance_string;

	},
			function (prevent_inline) {var cache_buster_0081;
		if (this.counter > 99)
			this.counter = this.counter / 2;
		else
			this.counter++;
		if (prevent_inline) {
			var i = 0;
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
		}
	},
			function (instance_string) {var cache_buster_0082;
		this.CMServerFullrefMonoParent$init(instance_string);
	},
			function () {var cache_buster_0083;
		this.member_b = -this.member_b;
		this.CMServerFullrefMonoParent$method(false);
	}
		],
		constructor: function() {var cache_buster_0084;
this.member_b = -1;
this.counter = 0;
this.instance_array = [];
this.instance_string = "";
this.init.apply(this, arguments);
},
		prototype_generator: function(cd,p) {var cache_buster_0085;
	var r=cd.references,
		s=cd.shared;

	p.init = r[2];
	p.method = r[3];
	p.CMServerFullrefMonoParent$init = r[0];
	p.CMServerFullrefMonoParent$method = r[1];

}
	},
	{
		path: "global.CMServerPartialrefMonoParent",
		"extends": null,
		"implements": null,
		constructor: function() {var cache_buster_0086;
this.counter = 0;
this.instance_array = [];
this.instance_string = "";
this.init.apply(this, arguments);
},
		prototype_generator: function(cd,p) {var cache_buster_0087;
	var r=cd.references,
		s=cd.shared;

	p.init = r[0];
	p.method = r[1];

},
		own_references: [
			function (instance_string) {var cache_buster_0088;

		this.instance_string = instance_string;

	},
			function (prevent_inline) {var cache_buster_0089;
		if (this.counter > 99)
			this.counter = this.counter / 2;
		else
			this.counter++;
		if (prevent_inline) {
			var i = 0;
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
		}
	}
		]
	},
	{
		path: "global.CMServerPartialrefMonoChildA",
		"extends": "global.CMServerPartialrefMonoParent",
		"implements": null,
		constructor: function() {var cache_buster_0090;
this.member_a = 1;
this.counter = 0;
this.instance_array = [];
this.instance_string = "";
this.init.apply(this, arguments);
},
		prototype_generator: function(cd,p) {var cache_buster_0091;
	var r=cd.references,
		s=cd.shared;

	p.init = r[2];
	p.method = r[3];
	p.CMServerPartialrefMonoParent$init = r[0];
	p.CMServerPartialrefMonoParent$method = r[1];

},
		own_references: [
			function (instance_string) {var cache_buster_0092;
		this.CMServerPartialrefMonoParent$init(instance_string);
	},
			function () {var cache_buster_0093;
		this.member_a = -this.member_a;
		this.CMServerPartialrefMonoParent$method(false);
	}
		]
	},
	{
		path: "global.CMServerPartialrefMonoChildB",
		"extends": "global.CMServerPartialrefMonoParent",
		"implements": null,
		constructor: function() {var cache_buster_0094;
this.member_b = -1;
this.counter = 0;
this.instance_array = [];
this.instance_string = "";
this.init.apply(this, arguments);
},
		prototype_generator: function(cd,p) {var cache_buster_0095;
	var r=cd.references,
		s=cd.shared;

	p.init = r[2];
	p.method = r[3];
	p.CMServerPartialrefMonoParent$init = r[0];
	p.CMServerPartialrefMonoParent$method = r[1];

},
		own_references: [
			function (instance_string) {var cache_buster_0096;
		this.CMServerPartialrefMonoParent$init(instance_string);
	},
			function () {var cache_buster_0097;
		this.member_b = -this.member_b;
		this.CMServerPartialrefMonoParent$method(false);
	}
		]
	},
	{
		path: "global.CMServerPartialrefPolyParent",
		"extends": null,
		"implements": null,
		constructor: function() {var cache_buster_0098;
this.instance_array = [];
this.init.apply(this, arguments);
},
		prototype_generator: function(cd,p) {var cache_buster_0099;
	var r=cd.references,
		s=cd.shared;

	p.counter = 0;
	p.instance_string = "";
	p.init = r[0];
	p.method = r[1];

},
		own_references: [
			function (instance_string) {var cache_buster_0100;

		this.instance_string = instance_string;

	},
			function (prevent_inline) {var cache_buster_0101;
		if (this.counter > 99)
			this.counter = this.counter / 2;
		else
			this.counter++;
		if (prevent_inline) {
			var i = 0;
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
		}
	}
		]
	},
	{
		path: "global.CMServerPartialrefPolyChildA",
		"extends": "global.CMServerPartialrefPolyParent",
		"implements": null,
		constructor: function() {var cache_buster_0102;
this.instance_array = [];
this.init.apply(this, arguments);
},
		prototype_generator: function(cd,p) {var cache_buster_0103;
	var r=cd.references,
		s=cd.shared;

	p.member_a = 1;
	p.init = r[2];
	p.method = r[3];
	p.counter = 0;
	p.instance_string = "";
	p.CMServerPartialrefPolyParent$init = r[0];
	p.CMServerPartialrefPolyParent$method = r[1];

},
		own_references: [
			function (instance_string) {var cache_buster_0104;
		this.CMServerPartialrefPolyParent$init(instance_string);
	},
			function () {var cache_buster_0105;
		this.member_a = -this.member_a;
		this.CMServerPartialrefPolyParent$method(false);
	}
		]
	},
	{
		path: "global.CMServerPartialrefPolyChildB",
		"extends": "global.CMServerPartialrefPolyParent",
		"implements": null,
		constructor: function() {var cache_buster_0106;
this.instance_array = [];
this.init.apply(this, arguments);
},
		prototype_generator: function(cd,p) {var cache_buster_0107;
	var r=cd.references,
		s=cd.shared;

	p.member_b = -1;
	p.init = r[2];
	p.method = r[3];
	p.counter = 0;
	p.instance_string = "";
	p.CMServerPartialrefPolyParent$init = r[0];
	p.CMServerPartialrefPolyParent$method = r[1];

},
		own_references: [
			function (instance_string) {var cache_buster_0108;
		this.CMServerPartialrefPolyParent$init(instance_string);
	},
			function () {var cache_buster_0109;
		this.member_b = -this.member_b;
		this.CMServerPartialrefPolyParent$method(false);
	}
		]
	}
]);

var KlassParent = klass(function (instance_string) {var cache_buster_0110;
	this.counter = 0;
	this.instance_array = [];
	this.instance_string = instance_string;
})
.methods({
	method: function (prevent_inline) {var cache_buster_0111;
		if (this.counter > 99)
			this.counter = this.counter / 2;
		else
			this.counter++;
		if (prevent_inline) {
			var i = 0;
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
		}
	}
});

var KlassChildA = KlassParent.extend(function (name) {var cache_buster_0112;
	this.member_a = 1;
})
.methods({
	method: function() {var cache_buster_0113;
		this.member_a = -this.member_a;
		this.supr(false);
	}
});

var KlassChildB = KlassParent.extend(function (name) {var cache_buster_0114;
	this.member_b = 1;
})
.methods({
	method: function() {var cache_buster_0115;
		this.member_b = -this.member_b;
		this.supr(false);
	}
});

var AugmentClassicalParent = augment.defclass({
	constructor: function (instance_string) {var cache_buster_0116;
		this.counter = 0;
		this.instance_array = [];
		this.instance_string = instance_string;
	},
	method: function (prevent_inline) {var cache_buster_0117;
		if (this.counter > 99)
			this.counter = this.counter / 2;
		else
			this.counter++;
		if (prevent_inline) {
			var i = 0;
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
			for (i = 0; i < 1; i++) dummy.method();
		}
	}
});

var AugmentClassicalChildA = augment(AugmentClassicalParent, function (uber) {var cache_buster_0118;
	this.constructor = function (instance_string) {var cache_buster_0119;
		this.member_a = 1;
		uber.constructor.call(this, instance_string);
	};

	this.method = function() {var cache_buster_0120;
		this.member_a = -this.member_a;
		uber.method.call(this, false);
	};
});

var AugmentClassicalChildB = augment(AugmentClassicalParent, function (uber) {var cache_buster_0121;
	this.constructor = function (instance_string) {var cache_buster_0122;
		this.member_b = -1;
		uber.constructor.call(this, instance_string);
	};

	this.method = function() {var cache_buster_0123;
		this.member_b = -this.member_b;
		uber.method.call(this, false);
	};
});